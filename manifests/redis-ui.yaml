apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-ui-settings
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Mi
  storageClassName: ssd
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-ui
  namespace: default
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: redis-ui
  template:
    metadata:
      labels:
        app: redis-ui
    spec:
      volumes:
        - name: settings
          persistentVolumeClaim:
            claimName: redis-ui-settings
      containers:
        - name: redis-ui
          image: patrikx3/p3x-redis-ui:2020.4.103
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /settings
              name: settings
          ports:
            - name: http
              containerPort: 7843
              protocol: TCP
          readinessProbe:
            failureThreshold: 5
            tcpSocket:
              port: http
---
apiVersion: v1
kind: Service
metadata:
  name: redis-ui
  namespace: default
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: redis-ui
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: redis-ui
  namespace: default
  annotations:
    kubernetes.io/ingress.class: nginx
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/whitelist-source-range: 10.0.0.0/16,192.168.0.0/16,46.61.178.246/32,188.170.23.33/32
spec:
  rules:
    - host: redis-ui.svc.movista.ru
      http:
        paths:
          - path: /
            backend:
              serviceName: redis-ui
              servicePort: http
  tls:
    - secretName: redis-ui-prod-tls
      hosts:
        - redis-ui.svc.movista.ru